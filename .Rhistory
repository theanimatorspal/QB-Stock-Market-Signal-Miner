data_xts <- xts::xts(data$adjusted, order.by = data$date)
return_xts <- dailyReturn(data_xts, type = "log")
sma_10 <- SMA(data_xts, 10)
sma_20 <- SMA(data_xts, 20)
RSI_14 <- RSI(data_xts, 14)
macd <- MACD(data_xts) # elle xts nai return garxa
macd_macd <- macd[, "macd"]
macd_signal <- macd[, "signal"]
data <- data %>%
mutate (
returns = as.numeric(return_xts),
sma_10 = as.numeric(sma_10),
sma_20 = as.numeric(sma_20),
RSI_14 = as.numeric(RSI_14),
macd = as.numeric(macd_macd),
signal = as.numeric(macd_signal),
) %>%
replace_na(list(sma_10 = 0,
sma_20 = 0,
RSI_14 = 0,
macd = 0,
signal = 0
))
return (data)
}
stock_xts <- xts::xts(data[, c("open", "close", "adjusted", "high", "low")], order.by = data$date)
chartSeries(type = "candlesticks")
chartSeries(type = "candlesticks", x = stock_xts)
chartSeries(stock_xts,
type = "candlesticks",
theme = chartTheme("white"),
TA = c(addBBands(n = 20, sd = 2),
addRSI(n = 14)))
}
chartSeries(stock_xts,
type = "candlesticks",
theme = chartTheme("white"),
TA = c(addBBands(n = 20, sd = 2),
addRSI(n = 14)))
data <- get_stock_data()
#generate_features <- function(data) {
data_xts <- xts::xts(data$adjusted, order.by = data$date)
return_xts <- dailyReturn(data_xts, type = "log")
sma_10 <- SMA(data_xts, 10)
sma_20 <- SMA(data_xts, 20)
RSI_14 <- RSI(data_xts, 14)
macd <- MACD(data_xts) # elle xts nai return garxa
macd_macd <- macd[, "macd"]
macd_signal <- macd[, "signal"]
bbands <- BBands(data_xts)
View(bbands)
bbands_plot <- features %>%
ggplot(aes(x = data))+
geom_line(aes(y = adjusted), color = "black", alpha = 0.6) +
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = as.Date(c("2023-01-01", "2024-02-01")))
features <- generate_features(data)
macd_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = macd), colour = "blue", alpha = 0.1)+
geom_line(aes(y = signal), colour = "red", alpha = 0.1)+
geom_bar(aes(y = macd-signal,
fill = macd - signal > 0),
stat = "identity", # ggplot le feri count herna thaalxa, so plot identity
alpha = 1)+
scale_fill_manual(
values = c("maroon", "skyblue"),
labels = c("bear", "bull"),
name = "MACD Histogram"
)+
coord_cartesian(xlim = as.Date(c("2023-1-1", "2024-2-1")))
bbands_plot <- features %>%
ggplot(aes(x = data))+
geom_line(aes(y = adjusted), color = "black", alpha = 0.6) +
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = as.Date(c("2023-01-01", "2024-02-01")))
macd_plot / bbands_plot
bbands_plot / macd_plot
bbands_plot / macd_plot
source("scraper.R")
bbands_plot / macd_plot
bbands_plot <- features %>%
ggplot(aes(x = data))+
geom_line(aes(y = adjusted), color = "black", alpha = 0.6) +
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = as.Date(c("2023-01-01", "2024-02-01")))+
theme_minimal()
bbands_plot
bbands_plot <- features %>%
ggplot(aes(x = data))+
#geom_line(aes(y = adjusted), color = "black", alpha = 0.6) +
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = as.Date(c("2023-01-01", "2024-02-01")))+
theme_minimal()
bbands_plot
features <- generate_features(data)
macd_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = macd), colour = "blue", alpha = 0.1)+
geom_line(aes(y = signal), colour = "red", alpha = 0.1)+
geom_bar(aes(y = macd-signal,
fill = macd - signal > 0),
stat = "identity", # ggplot le feri count herna thaalxa, so plot identity
alpha = 1)+
scale_fill_manual(
values = c("maroon", "skyblue"),
labels = c("bear", "bull"),
name = "MACD Histogram"
)+
coord_cartesian(xlim = as.Date(c("2023-1-1", "2024-2-1")))+
theme_minimal()
bbands_plot <- features %>%
ggplot(aes(x = data))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = as.Date(c("2023-01-01", "2024-02-01")))+
theme_minimal()
bbands_plot
View(features)
features <- generate_features(data)
View(features)
generate_features <- function(data) {
data_xts <- xts::xts(data$adjusted, order.by = data$date)
return_xts <- dailyReturn(data_xts, type = "log")
sma_10 <- SMA(data_xts, 10)
sma_20 <- SMA(data_xts, 20)
RSI_14 <- RSI(data_xts, 14)
macd <- MACD(data_xts) # elle xts nai return garxa
macd_macd <- macd[, "macd"]
macd_signal <- macd[, "signal"]
bbands <- BBands(data_xts)
bbands_down <- bbands$dn
bbands_up <- bbands$up
bbands_avg <- bbands$mavg
data <- data %>%
mutate (
returns = as.numeric(return_xts),
sma_10 = as.numeric(sma_10),
sma_20 = as.numeric(sma_20),
RSI_14 = as.numeric(RSI_14),
macd = as.numeric(macd_macd),
signal = as.numeric(macd_signal),
bbands_up = as.numeric(bbands_up),
bbands_down = as.numeric(bbands_down),
bbands_avg = as.numeric(bbands_avg)
) %>%
replace_na(list(sma_10 = 0,
sma_20 = 0,
RSI_14 = 0,
macd = 0,
signal = 0,
bbands_up = 0,
bbands_down = 0,
bbands_avg = 0
))
return (data)
}
features <- generate_features(data)
macd_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = macd), colour = "blue", alpha = 0.1)+
geom_line(aes(y = signal), colour = "red", alpha = 0.1)+
geom_bar(aes(y = macd-signal,
fill = macd - signal > 0),
stat = "identity", # ggplot le feri count herna thaalxa, so plot identity
alpha = 1)+
scale_fill_manual(
values = c("maroon", "skyblue"),
labels = c("bear", "bull"),
name = "MACD Histogram"
)+
coord_cartesian(xlim = as.Date(c("2023-1-1", "2024-2-1")))+
theme_minimal()
bbands_plot <- features %>%
ggplot(aes(x = data))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = as.Date(c("2023-01-01", "2024-02-01")))+
theme_minimal()
bbands_plot
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = as.Date(c("2023-01-01", "2024-02-01")))+
theme_minimal()
bbands_plot
bbands_plot  / macd_plot
plotly(bbands_plot  / macd_plot)
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
plot_features <- function (data, start_date = "2023-1-1", end_date = "2024-2-1") {
features <- generate_features(data)
date_limit <- as.Date(c("2023-1-1", "2024-2-1"))
macd_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = macd), colour = "blue", alpha = 0.1)+
geom_line(aes(y = signal), colour = "red", alpha = 0.1)+
geom_bar(aes(y = macd-signal,
fill = macd - signal > 0),
stat = "identity", # ggplot le feri count herna thaalxa, so plot identity
alpha = 1)+
scale_fill_manual(
values = c("maroon", "skyblue"),
labels = c("bear", "bull"),
name = "MACD Histogram"
)+
coord_cartesian(xlim = date_limit)+
theme_minimal()
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit)+
theme_minimal()
rsi_plot <- features %>%
ggplot(aes(x = date)) +
geom_line(aes(y = RSI_14))+
labs(title = "RSI")+
coord_cartesian(xlim = date_limit)+
theme_minimal()
return(bbands_plot  / macd_plot / rsi_plot)
}
plot_features(data)
plot_features(data, "2022-1-1", "2022-5-1")
plot_features(data, "2022-1-1", "2022-1-5")
features <- generate_features(data)
plot_features(data, "2022-1-1", "2022-1-5")
plot_features <- function (data, start_date = "2023-1-1", end_date = "2024-2-1") {
features <- generate_features(data)
date_limit <- as.Date(c(start_date, end_date))
macd_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = macd), colour = "blue", alpha = 0.1)+
geom_line(aes(y = signal), colour = "red", alpha = 0.1)+
geom_bar(aes(y = macd-signal,
fill = macd - signal > 0),
stat = "identity", # ggplot le feri count herna thaalxa, so plot identity
alpha = 1)+
scale_fill_manual(
values = c("maroon", "skyblue"),
labels = c("bear", "bull"),
name = "MACD Histogram"
)+
coord_cartesian(xlim = date_limit)+
theme_minimal()
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit)+
theme_minimal()
rsi_plot <- features %>%
ggplot(aes(x = date)) +
geom_line(aes(y = RSI_14))+
labs(title = "RSI")+
coord_cartesian(xlim = date_limit)+
theme_minimal()
return(bbands_plot  / macd_plot / rsi_plot)
}
plot_features(data, "2022-1-1", "2022-1-5")
plot_features(data, "2022-1-1", "2022-5-5")
return(bbands_plot  / macd_plot / rsi_plot)
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = c(200, 300))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = bbands_plot_yrange)+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit)+
scale_y_continuous(
limits = range(features$bbands_up, features$bbands_down) + c(-10, 10),
expand = c(0, 0) # don't add any extra plotting
)+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit)+
scale_y_continuous(
limits = range(features$bbands_up, features$bbands_down, features$bbands_avg),
expand = c(0, 0) # don't add any extra plotting
)+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit)+
scale_y_continuous(
limits = c(100, 300)
limits = range(features$bbands_up, features$bbands_down, features$bbands_avg),
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit)+
scale_y_continuous(
limits = c(100, 300),
limits = range(features$bbands_up, features$bbands_down, features$bbands_avg),
expand = c(0, 0) # don't add any extra plotting
)+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
scale_y_continuous(
limits = c(100, 300),
limits = range(features$bbands_up, features$bbands_down, features$bbands_avg),
expand = c(0, 0) # don't add any extra plotting
)+
coord_cartesian(xlim = date_limit)+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = c(100, 200))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
#    coord_cartesian(xlim = date_limit, ylim = c(100, 200))+
scale_x_date(limits = date_limit)+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
#    coord_cartesian(xlim = date_limit, ylim = c(100, 200))+
scale_x_date(limits = date_limit)+
scale_y_continuous(limits = c(100, 200))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = c(100, 200))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = c(100, 200), expand = FALSE)+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = c(100, 200), expand = c(0, 0))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
scale_x_date(xlim = date_limit)+
scale_y_continuous(ylim = c(100, 200), expand = c(0, 0))+
#    coord_cartesian(xlim = date_limit, ylim = c(100, 200), expand = c(0, 0))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
scale_x_date(limits = date_limit)+
scale_y_continuous(limits = c(100, 200), expand = c(0, 0))+
#    coord_cartesian(xlim = date_limit, ylim = c(100, 200), expand = c(0, 0))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
return(bbands_plot)#  / macd_plot / rsi_plot)
plot_features(data, "2022-1-1", "2022-5-5")
plot_features(data, "2022-1-1", "2022-5-5")
rsi_plot <- features %>%
ggplot(aes(x = date)) +
geom_line(aes(y = RSI_14))+
labs(title = "RSI")+
coord_cartesian(xlim = date_limit)+
theme_minimal()
return(bbands_plot  / macd_plot / rsi_plot)
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = c(100, 200))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = range(features$bbands_up) + c(-10, 10))+
theme_minimal()
bbands_plot <- features %>%
ggplot(aes(x = date))+
geom_line(aes(y = bbands_up), color = "skyblue", linetype = "dashed") +
geom_line(aes(y = bbands_down), color = "tomato", linetype = "dashed") +
geom_line(aes(y = bbands_avg), color = "purple", linetype = "dotted") +
labs(title = "ðŸ“ˆ Bollinger Bands", y = "Price") +
coord_cartesian(xlim = date_limit, ylim = range(features$bbands_up, features$bbands_down) + c(-10, 10))+
theme_minimal()
plot_features(data, "2022-1-1", "2022-5-5")
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
plotly(plot_features(data, "2022-1-1", "2022-5-5"))
return c(bbands_plot  / macd_plot / rsi_plot)
return(c(bbands_plot  / macd_plot / rsi_plot))
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
plot_features(data, "2022-1-1", "2022-5-5")[2]
plot_features(data, "2022-1-1", "2022-5-5")[3]
return(list(bbands_plot, macd_plot, rsi_plot))
return(list(bbands_plot, macd_plot, rsi_plot))
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
plot_features(data, "2022-1-1", "2022-5-5")[1]
plot <- plot_features(data, "2022-1-1", "2022-5-5")
plot[2]
plotly(plot[2])
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
plot[1]
plot[2]
plot[3]
plot[1]
plot <- plot_features(data, "2022-4-1", "2022-5-5")
plot[1]
plot <- plot_features(data, "2018-4-1", "2022-5-5")
plot[1]
plot[2]
?CCI
momentum_10 <- momentum(data_xts, n = 10)
features <- generate_features(data)
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
source("C:/Users/sansk/Music/QB Stock Market Signal Miner/features.R", echo=TRUE)
